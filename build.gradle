plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
	id "co.uzzu.dotenv.gradle" version "2.0.0"
	id "com.matthewprenger.cursegradle" version "1.4.0"
	id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Mods"
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		url "https://maven.shedaniel.me/"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "dev.emi:trinkets:${project.trinkets_version}"

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modLocalRuntime("com.terraformersmc:modmenu:${project.modmenu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
	modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}

import com.modrinth.minotaur.dependencies.ModDependency

modrinth {
	token = env.MODRINTH_TOKEN.value
	projectId = 'YTVu0oG8'
	versionNumber = project.mod_version
	versionName = 'VanitySlots ' + project.mod_version
	uploadFile = remapJar
	gameVersions = List<String>.of(project.functional_versions.split(","))
	loaders = ['fabric', 'quilt']
	changelog = file("changelog.md").text
	dependencies = [
			new ModDependency('P7dR8mSH', 'required'), // Fabric API
			new ModDependency('9s6osm5g', 'required'), // Cloth Config
			new ModDependency('5aaWibi9', 'required'), // Trinkets
			new ModDependency('mOgUt4GM', 'optional') // Mod Menu
	]
}

curseforge {
	apiKey = env.CURSEFORGE_TOKEN.value
	project {
		id = '570109'
		releaseType = 'release'
		changelog = file("changelog.md").text
		changelogType = 'markdown'

		for (version in functional_versions.split(",")) {
			addGameVersion(version)
		}

		addGameVersion "Java 17"
		addGameVersion "Fabric"
		addGameVersion "Quilt"

		relations {
			requiredDependency("fabric-api")
			requiredDependency("cloth-config")
			requiredDependency("trinkets")
			optionalDependency("modmenu")
		}

		mainArtifact(remapJar.archiveFile) {
			displayName = 'VanitySlots ' + project.mod_version
		}

		afterEvaluate {
			uploadTask.dependsOn remapJar
		}
	}
	options {
		forgeGradleIntegration = false
	}
}
